name: 🚀 Deploy to Home Assistant

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/**'
  workflow_dispatch:
    inputs:
      force_restart:
        description: 'Restart Home Assistant after deploy'
        type: boolean
        default: false

jobs:
  validate:
    name: Validate Before Deploy
    runs-on: self-hosted  # Changed from ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create test secrets
        run: |
          cp secrets.yaml.example secrets.yaml
          sed -i 's/your_.*_here/test_value/g' secrets.yaml
          sed -i 's/your_.*_password/test_password/g' secrets.yaml
          sed -i 's/your_.*_key/test_api_key_12345678901234567890123456789012/g' secrets.yaml
      - uses: frenck/action-home-assistant@v1.4
        with:
          path: "."

  deploy:
    name: Deploy Configuration
    needs: validate
    runs-on: self-hosted
    if: needs.validate.result == 'success'
    
    steps:
      - name: 📥 Check out repository
        uses: actions/checkout@v4
        
      # REMOVED: SSH Setup (not needed for local deployment)
      
      - name: 🚀 Deploy to Home Assistant (Local)
        run: |
          echo "🚀 Deploying configuration locally..."
          echo "Working directory: $(pwd)"
          echo "Target: /mnt/user/appdata/Home-Assistant-Container/"
          
          # List what we're deploying
          echo "Files to deploy:"
          ls -la
          
          # Copy files directly (no SSH - we're on the same machine)
          sudo rsync -rlptD \
            --no-owner --no-group \
            --include='*.yaml' \
            --include='*.yml' \
            --include='automations.yaml' \
            --include='scripts.yaml' \
            --include='scenes.yaml' \
            --include='configuration.yaml' \
            --exclude='*' \
            ./ /mnt/user/appdata/Home-Assistant-Container/
            
          echo "✅ Configuration deployed successfully"
          
      - name: 🔁 Restart Home Assistant Container
        if: github.event.inputs.force_restart == 'true'
        run: |
          echo "🔁 Restarting Home Assistant container..."
          
          # Find the Home Assistant container
          CONTAINER=$(docker ps --filter "name=Home-Assistant" --format "{{.Names}}" | head -1)
          
          if [ -z "$CONTAINER" ]; then
            echo "❌ Home Assistant container not found"
            echo "Available containers:"
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Image}}"
            exit 1
          fi
          
          echo "Found container: $CONTAINER"
          
          # Restart the container
          if docker restart "$CONTAINER"; then
            echo "✅ Container restart successful"
            echo "⏳ Waiting for Home Assistant to initialize..."
            sleep 30
          else
            echo "❌ Container restart failed"
            exit 1
          fi