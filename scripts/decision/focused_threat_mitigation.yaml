focused_threat_mitigation:
  alias: Focused Threat Mitigation
  description: "AI system that focuses response on specific high-priority threats"
  icon: mdi:target
  sequence:
    # Identify primary threat for focused response
    - variables:
        primary_threat: >
          {% set health = states('sensor.sietch_health_score') | int %}
          {% set survival = states('sensor.desert_survival_status') %}
          {% set water = states('sensor.water_conservation_index') | int %}
          {% set atmospheric = states('sensor.atmospheric_conditions') | int %}
          {% set security = states('sensor.night_security_effectiveness') | int %}
          
          {# Identify the most critical single threat #}
          {% if health < 40 %}
            system_health_critical
          {% elif survival == 'Critical' %}
            survival_systems_failing
          {% elif water > 85 %}
            water_scarcity_critical  
          {% elif atmospheric < 25 %}
            atmospheric_emergency
          {% elif security < 35 %}
            security_compromise
          {% else %}
            no_critical_threat
          {% endif %}
        
        mitigation_intensity: >
          {% set health = states('sensor.sietch_health_score') | int %}
          {% set water = states('sensor.water_conservation_index') | int %}
          {% set atmospheric = states('sensor.atmospheric_conditions') | int %}
          
          {% if primary_threat == 'system_health_critical' %}
            {{ 100 - health }}
          {% elif primary_threat == 'survival_systems_failing' %}
            90
          {% elif primary_threat == 'water_scarcity_critical' %}
            {{ water - 70 if water > 70 else 20 }}
          {% elif primary_threat == 'atmospheric_emergency' %}
            {{ 50 - atmospheric if atmospheric < 50 else 10 }}
          {% else %}
            30
          {% endif %}
    
    # Log focused threat analysis
    - service: input_text.set_value
      target:
        entity_id: input_text.security_intelligence_log
      data:
        value: >
          FOCUSED THREAT MITIGATION: {{ now().strftime('%H:%M') }} -
          Primary Threat: {{ primary_threat | upper }} -
          Mitigation Intensity: {{ mitigation_intensity }}% -
          Health: {{ states('sensor.sietch_health_score') }}% -
          Water: {{ states('sensor.water_conservation_index') }}% -
          Atmospheric: {{ states('sensor.atmospheric_conditions') }}%
    
    # Execute focused mitigation based on primary threat
    - choose:
        # System health critical - focus all resources on system stability
        - conditions:
            - condition: template
              value_template: "{{ primary_threat == 'system_health_critical' }}"
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.security_intelligence_log
              data:
                value: "HEALTH FOCUS: All resources directed to system health restoration"
            
            # Maximum system health focus
            - service: script.turn_on
              target:
                entity_id: script.system_health_check
            - service: script.turn_on
              target:
                entity_id: script.resource_throttling_protocol
            - service: input_number.set_value
              target:
                entity_id: input_number.system_performance_target
              data:
                value: 50  # Reduced performance to focus on health
        
        # Survival systems failing - emergency protocols
        - conditions:
            - condition: template
              value_template: "{{ primary_threat == 'survival_systems_failing' }}"
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.security_intelligence_log
              data:
                value: "SURVIVAL FOCUS: Emergency survival protocols activated"
            
            - service: script.turn_on
              target:
                entity_id: script.emergency_system_stabilization
            - service: scene.turn_on
              target:
                entity_id: scene.water_emergency
        
        # Water scarcity critical - maximum conservation
        - conditions:
            - condition: template
              value_template: "{{ primary_threat == 'water_scarcity_critical' }}"
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.security_intelligence_log
              data:
                value: "WATER FOCUS: Maximum water conservation protocols active"
            
            - service: script.turn_on
              target:
                entity_id: script.scarcity_prevention_protocol
            - service: script.turn_on
              target:
                entity_id: script.emergency_load_shedding
        
        # Atmospheric emergency - climate focus
        - conditions:
            - condition: template
              value_template: "{{ primary_threat == 'atmospheric_emergency' }}"
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.security_intelligence_log
              data:
                value: "ATMOSPHERIC FOCUS: Emergency climate response active"
            
            - service: script.turn_on
              target:
                entity_id: script.emergency_climate_protocol
            - service: scene.turn_on
              target:
                entity_id: scene.system_storm_mode
        
        # Security compromise - security focus
        - conditions:
            - condition: template
              value_template: "{{ primary_threat == 'security_compromise' }}"
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.security_intelligence_log
              data:
                value: "SECURITY FOCUS: Enhanced security protocols active"
            
            - service: script.turn_on
              target:
                entity_id: script.emergency_security_lockdown
            - service: script.turn_on
              target:
                entity_id: script.enhanced_anomaly_detection
      
      # No critical threat - maintain readiness
      default:
        - service: input_text.set_value
          target:
            entity_id: input_text.security_intelligence_log
          data:
            value: "NO CRITICAL THREAT: Maintaining readiness and monitoring"
    
    # Focused mitigation notification
    - condition: template
      value_template: "{{ primary_threat != 'no_critical_threat' }}"
    - service: notify.mobile_app_tori_phone_2
      data:
        message: >
          ðŸŽ¯ Focused Threat Response: {{ primary_threat | title | replace('_', ' ') }}
          Intensity: {{ mitigation_intensity }}% | All resources focused on primary threat.