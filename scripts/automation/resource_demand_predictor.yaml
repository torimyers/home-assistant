resource_demand_predictor:
  alias: Resource Demand Predictor
  description: "Predicts resource demand and prepares systems accordingly"
  icon: mdi:chart-bell-curve
  sequence:
    # Analyze demand patterns
    - service: input_text.set_value
      target:
        entity_id: input_text.predictive_analytics_log
      data:
        value: >
          Demand Prediction: {{ now().strftime('%H:%M') }} -
          Harvester: {{ states('sensor.harvester_efficiency') }}% -
          Conservation: {{ states('sensor.water_conservation_index') }}% -
          Spice Level: {{ states('sensor.spice_production_level') }}%
    
    # Update demand prediction
    - service: input_number.set_value
      target:
        entity_id: input_number.prediction_accuracy_score
      data:
        value: >
          {% set harvester = states('sensor.harvester_efficiency') | int %}
          {% set spice = states('sensor.spice_production_level') | int %}
          {% set current_score = states('input_number.prediction_accuracy_score') | int %}
          
          {% if harvester > 80 and spice > 70 %}
            {{ [current_score + 10, 100] | min }}
          {% elif harvester < 40 or spice < 30 %}
            {{ [current_score - 5, 0] | max }}
          {% else %}
            {{ current_score }}
          {% endif %}
    
    # Demand notification
    - condition: template
      value_template: >
        {% set harvester = states('sensor.harvester_efficiency') | int %}
        {{ harvester < 50 }}
    - service: notify.mobile_app_tori_phone_2
      data:
        message: "ğŸ“Š High resource demand predicted. Conservation protocols recommended."