alias: "Temperature Threshold Management"
description: "Stillsuit temperature control - threshold breach responses"
mode: single

trigger:
  - platform: template
    value_template: >
      {% set current_temp = state_attr('weather.home', 'temperature') or 72 %}
      {% set high_threshold = states('input_number.temperature_threshold_high') | float(78) %}
      {% set low_threshold = states('input_number.temperature_threshold_low') | float(68) %}
      {{ current_temp > high_threshold or current_temp < low_threshold }}
    for:
      minutes: 5

variables:
  current_temp: "{{ state_attr('weather.home', 'temperature') or 72 }}"
  high_threshold: "{{ states('input_number.temperature_threshold_high') | float(78) }}"
  low_threshold: "{{ states('input_number.temperature_threshold_low') | float(68) }}"
  occupancy: "{{ is_state('binary_sensor.house_occupied', 'on') }}"
  energy_score: "{{ states('sensor.energy_independence_score') | float(80) }}"

action:
  # Log temperature threshold event
  - service: logbook.log
    data:
      name: "Stillsuit Climate Control"
      message: "Temperature threshold breach: {{ current_temp }}°F"

  # High Temperature Response
  - if:
      - condition: template
        value_template: "{{ current_temp > high_threshold }}"
    then:
      # Activate cooling measures based on energy availability
      - if:
          - condition: template
            value_template: "{{ energy_score > 70 }}"
        then:
          # Full cooling with good energy situation
          - service: climate.set_temperature
            data:
              entity_id: climate.home
              temperature: "{{ high_threshold - 2 }}"

          - service: fan.turn_on
            target:
              area_id: ["living_room", "bedroom", "office"]
            data:
              percentage: 75
        else:
          # Energy-conscious cooling
          - service: climate.set_temperature
            data:
              entity_id: climate.home
              temperature: "{{ high_threshold - 1 }}"

          # Use strategic natural cooling
          - if:
              - condition: template
                value_template: "{{ now().hour >= 20 or now().hour <= 6 }}"
            then:
              # Night cooling - open vents, strategic fans
              - service: fan.turn_on
                target:
                  area_id: "living_room"
                data:
                  percentage: 50

      # Notify of cooling action
      - service: notify.mobile_app_tori_phone_2
        data:
          title: "🌡️ Stillsuit: Cooling Activated"
          message: >
            Temperature {{ current_temp }}°F exceeds threshold {{ high_threshold }}°F.
            {% if energy_score > 70 %}Full cooling measures engaged.
            {% else %}Energy-conscious cooling initiated. Independence: {{ energy_score }}%{% endif %}

  # Low Temperature Response
  - if:
      - condition: template
        value_template: "{{ current_temp < low_threshold }}"
    then:
      # Heating optimization based on occupancy and energy
      - if:
          - condition: template
            value_template: "{{ occupancy and energy_score > 60 }}"
        then:
          # Occupied heating
          - service: climate.set_temperature
            data:
              entity_id: climate.home
              temperature: "{{ low_threshold + 2 }}"
        else:
          # Minimal heating when unoccupied or low energy
          - service: climate.set_temperature
            data:
              entity_id: climate.home
              temperature: "{{ low_threshold + 1 }}"

      # Notify of heating action
      - service: notify.mobile_app_tori_phone_2
        data:
          title: "🔥 Stillsuit: Heating Engaged"
          message: >
            Temperature {{ current_temp }}°F below threshold {{ low_threshold }}°F.
            {% if occupancy and energy_score > 60 %}Full heating activated.
            {% else %}Minimal heating for conservation. Independence: {{ energy_score }}%{% endif %}