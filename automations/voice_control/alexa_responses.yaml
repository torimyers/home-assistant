alias: "Alexa Voice Response Automation"
description: "Enhanced responses and actions for Alexa voice commands with Dune theming"
trigger:
  # Trigger on Alexa intent recognition
  - platform: event
    event_type: alexa_actionable_notification
    id: "alexa_intent"
  
  # Trigger on TTS completion for follow-up actions
  - platform: event
    event_type: tts.cloud_say_completed
    id: "tts_completed"

condition:
  - condition: template
    value_template: "{{ trigger.id == 'alexa_intent' }}"

action:
  # Enhanced voice responses based on intent
  - choose:
      # Lighting activation response
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'ActivateSietchLighting' }}"
        sequence:
          - service: tts.cloud_say
            target:
              entity_id: 
                - media_player.bedroom_2
            data:
              message: >
                Sietch lighting protocol engaged. 
                Current activity level: {{ states('sensor.fremen_activity_level') }}%.
                Optimal brightness configured for desert conditions.
      
      # Security activation response
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'ActivateSecurityMode' }}"
        sequence:
          - service: tts.cloud_say
            target:
              entity_id: media_player.bedroom_2
            data:
              message: >
                Security protocols activated. 
                Sietch health at {{ states('sensor.sietch_health_score') }}%.
                All perimeter sensors armed. The desert watches.
      
      # System status detailed response
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'SystemStatus' }}"
        sequence:
          - service: tts.cloud_say
            target:
              entity_id: media_player.bedroom_2
            data:
              message: >
                {% set health = states('sensor.sietch_health_score') | int %}
                {% set activity = states('sensor.fremen_activity_level') | int %}
                {% set energy = states('sensor.energy_shield_status') | int %}
                {% set conservation = states('sensor.water_conservation_index') | int %}
                
                Sietch Command Report:
                {% if health >= 80 %}
                All systems optimal.
                {% elif health >= 60 %}
                Systems operating within acceptable parameters.
                {% else %}
                Attention required - some systems need adjustment.
                {% endif %}
                
                Activity level: {{ activity }}%.
                Energy shield: {{ energy }}%.
                Water conservation: {{ conservation }}%.
                
                {% if activity > 80 %}
                High activity detected - all systems engaged.
                {% elif activity < 20 %}
                Low activity - conservation protocols active.
                {% endif %}
      
      # Climate control response
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'ActivateClimateControl' }}"
        sequence:
          - service: tts.cloud_say
            target:
              entity_id: media_player.bedroom_2
            data:
              message: >
                Environmental controls engaged. 
                Maintaining optimal desert habitat conditions.
                Stillsuit efficiency optimized.
      
      # Mode switching confirmations
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'EnableVacationMode' }}"
        sequence:
          - service: tts.cloud_say
            target:
              entity_id: media_player.bedroom_2
            data:
              message: >
                Vacation mode confirmed. 
                The Sietch will maintain watch during your absence.
                Automated systems will preserve resources and security.
                Safe travels across the desert.
          - delay: '00:00:02'
          - service: script.turn_on
            target:
              entity_id: script.comprehensive_resource_optimization

mode: parallel
max: 10